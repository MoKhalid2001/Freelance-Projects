
import java.sql.Connection;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

public class ManageBookingsForm extends javax.swing.JFrame {
    
    private Connection connection;
    private DefaultTableModel tableModel;
    private double pricePerDay;
    private int bookingId, customerId;
   
    public ManageBookingsForm(Connection connection) {
        this.connection = connection;
        initComponents();
        tableModel = new DefaultTableModel(new Object[]{"Booking ID", "Customer ID", "Car Model", "Rental Days", "Total Price", "Booking Date", "Status"}, 0);
        bookingsTable.setModel(tableModel);
        loadAllBookings();
    }
    
    private void loadAllBookings() {
        String query = "SELECT b.id AS booking_id, b.customer_id, c.make, c.model, b.days, b.total_price, b.booking_date, c.price, c.available " +
                       "FROM bookings b " +
                       "JOIN cars c ON b.car_id = c.id";
        
        try (PreparedStatement stmt = connection.prepareStatement(query)) {
            ResultSet rs = stmt.executeQuery();
            while (rs.next()) {
                tableModel.addRow(new Object[]{
                    rs.getInt("booking_id"),
                    rs.getInt("customer_id"),
                    rs.getString("make"),
                    rs.getString("model"),
                    rs.getInt("days"),
                    rs.getDouble("total_price"),
                    rs.getDate("booking_date"),
                    rs.getDouble("price"),
                    rs.getInt("available")
                });
            }
            tableModel.fireTableDataChanged();
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Database error: " + e.getMessage());
        }
    }
    
    private void refreshBookingsTable() {
    tableModel.setRowCount(0);  // Clear the table
    loadAllBookings();          // Reload data
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookingsTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        editBooking = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        saveBooking = new javax.swing.JButton();
        deleteBooking = new javax.swing.JButton();
        makeTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        modelTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        totalPriceTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        daysField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(122, 178, 211));

        bookingsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(bookingsTable);

        jLabel2.setFont(new java.awt.Font("Segoe UI Light", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(74, 98, 138));
        jLabel2.setText("Manage Bookings");

        editBooking.setBackground(new java.awt.Color(122, 178, 211));
        editBooking.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        editBooking.setForeground(new java.awt.Color(74, 98, 138));
        editBooking.setText("Edit Booking");
        editBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBookingActionPerformed(evt);
            }
        });

        backButton.setBackground(new java.awt.Color(122, 178, 211));
        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/back-button.png"))); // NOI18N
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        saveBooking.setBackground(new java.awt.Color(122, 178, 211));
        saveBooking.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        saveBooking.setForeground(new java.awt.Color(74, 98, 138));
        saveBooking.setText("Save");
        saveBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBookingActionPerformed(evt);
            }
        });

        deleteBooking.setBackground(new java.awt.Color(122, 178, 211));
        deleteBooking.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        deleteBooking.setForeground(new java.awt.Color(74, 98, 138));
        deleteBooking.setText("Delete Booking");
        deleteBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBookingActionPerformed(evt);
            }
        });

        makeTextField.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        makeTextField.setForeground(new java.awt.Color(74, 98, 138));
        makeTextField.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(74, 98, 138));
        jLabel4.setText("Make: ");

        jLabel3.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(74, 98, 138));
        jLabel3.setText("Model:");

        modelTextField.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        modelTextField.setForeground(new java.awt.Color(74, 98, 138));
        modelTextField.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(74, 98, 138));
        jLabel5.setText("Total Price:");

        totalPriceTextField.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        totalPriceTextField.setForeground(new java.awt.Color(74, 98, 138));

        jLabel6.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(74, 98, 138));
        jLabel6.setText("Days:");

        daysField.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        daysField.setForeground(new java.awt.Color(74, 98, 138));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(206, 206, 206))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backButton)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(modelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(totalPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(daysField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(42, 42, 42)
                                .addComponent(makeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(171, 171, 171)
                .addComponent(editBooking)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteBooking)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveBooking)
                .addContainerGap(226, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(makeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(modelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(daysField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editBooking)
                    .addComponent(deleteBooking)
                    .addComponent(saveBooking))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBookingActionPerformed
        // TODO add your handling code here:
        int selectedRow = bookingsTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a booking to edit.");
            return;
        }

        // Get booking details from the selected row
         bookingId = (int) bookingsTable.getValueAt(selectedRow, 0);
         customerId = (int) bookingsTable.getValueAt(selectedRow, 1);
        String make = (String) bookingsTable.getValueAt(selectedRow, 2);
        String model = (String) bookingsTable.getValueAt(selectedRow, 3);
        int days = (int) bookingsTable.getValueAt(selectedRow, 4);
        double totalPrice = (double) bookingsTable.getValueAt(selectedRow, 5);
        pricePerDay = totalPrice / days;
        
        makeTextField.setText(make);
        modelTextField.setText(model);
        daysField.setText(String.valueOf(days));
        totalPriceTextField.setText(String.format("%.2f", totalPrice));
        
    }//GEN-LAST:event_editBookingActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new StaffDashboard(connection).setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    private void saveBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBookingActionPerformed
        // TODO add your handling code here:
        try {
            int updatedDays = Integer.parseInt(daysField.getText());
            if (updatedDays <= 0) {
                JOptionPane.showMessageDialog(this, "Please enter a valid number of days.");
                return;
            }

            double updatedTotalPrice = updatedDays * pricePerDay;  // You can calculate the updated price

            // Update the booking in the database
            String updateBookingQuery = "UPDATE bookings SET days = ?, total_price = ? WHERE id = ?";
            try (PreparedStatement stmt = connection.prepareStatement(updateBookingQuery)) {
                stmt.setInt(1, updatedDays);
                stmt.setDouble(2, updatedTotalPrice);
                stmt.setInt(3, bookingId);
                stmt.executeUpdate();
            }

            // Optionally, update the customer's total_price or other related tables (if needed)
            String updateCustomerQuery = "UPDATE customers SET total_price = total_price + ? WHERE id = ?";
            try (PreparedStatement stmt = connection.prepareStatement(updateCustomerQuery)) {
                stmt.setDouble(1, updatedTotalPrice);
                stmt.setInt(2, customerId);
                stmt.executeUpdate();
            }

            JOptionPane.showMessageDialog(this, "Booking updated successfully!");
            refreshBookingsTable();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error updating booking.", "Database Error", JOptionPane.ERROR_MESSAGE);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid number of days.");
        }
    }//GEN-LAST:event_saveBookingActionPerformed

    private void deleteBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBookingActionPerformed
        // TODO add your handling code here:
        int selectedRow = bookingsTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a booking to delete.");
            return;
        }

        // Get booking ID of the selected row
        int bookingId = (int) bookingsTable.getValueAt(selectedRow, 0);

        // Confirm deletion
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this booking?");
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        try {
            // Step 1: Delete the booking from the 'bookings' table
            String deleteBookingQuery = "DELETE FROM bookings WHERE id = ?";
            try (PreparedStatement stmt = connection.prepareStatement(deleteBookingQuery)) {
                stmt.setInt(1, bookingId);
                stmt.executeUpdate();
            }

            // Step 2: Update the 'cars' table to increment the available count
            String updateCarQuery = "UPDATE cars SET available = available + 1 WHERE id = (SELECT car_id FROM bookings WHERE id = ?)";
            try (PreparedStatement stmt = connection.prepareStatement(updateCarQuery)) {
                stmt.setInt(1, bookingId);
                stmt.executeUpdate();
            }

            // Step 3: Refresh the bookings table
            refreshBookingsTable();
            JOptionPane.showMessageDialog(this, "Booking deleted successfully!");

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "An error occurred while deleting the booking.", "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteBookingActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageBookingsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageBookingsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageBookingsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageBookingsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                // new ManageBookingsForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JTable bookingsTable;
    private javax.swing.JTextField daysField;
    private javax.swing.JButton deleteBooking;
    private javax.swing.JButton editBooking;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField makeTextField;
    private javax.swing.JTextField modelTextField;
    private javax.swing.JButton saveBooking;
    private javax.swing.JTextField totalPriceTextField;
    // End of variables declaration//GEN-END:variables
}
